{"version":3,"sources":["../../src/components/Toast/index.js","../../src/components/ToastContainer/index.js","App.js","index.js"],"names":["Toast","item","useState","displayBool","setDisplayBool","toggleClass","setToggleClass","useEffect","setTimeout","styles","x","setInterval","clearInterval","className","mainList","list","setList","toastList","setToastList","toastProperties","prevList","ref","useRef","usePrevious","i","showToast","dup","newlist","oldItem","dupList","type","text","delaytime","id","Math","description","icon","delayTime","date","isRendered","isShow","key","index","App","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5365ecd7.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport styles from './styles.module.css'\r\n\r\nexport const Toast = ({ item }) => {\r\n  const [displayBool, setDisplayBool] = useState(true)\r\n  const [toggleClass, setToggleClass] = useState('')\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setToggleClass(styles.show)\r\n    }, 100)\r\n    let x = setInterval(() => {\r\n      clearInterval(x)\r\n      setToggleClass(styles.hide)\r\n      setTimeout(() => {\r\n        setDisplayBool(false)\r\n      }, 1000)\r\n    }, item?.delayTime)\r\n  }, [])\r\n\r\n  return (\r\n    <div\r\n      className={`${item?.type} ${styles.boxRightTop} ${toggleClass} ${\r\n        !displayBool ? styles.dNone : ''\r\n      }`}\r\n    >\r\n      <div className={styles.toastIcon}>{item?.icon}</div>\r\n      {item?.description}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useState, useRef } from 'react'\r\nimport {\r\n  FaCheckCircle,\r\n  FaExclamationCircle,\r\n  FaExclamationTriangle,\r\n  FaInfoCircle\r\n} from 'react-icons/fa'\r\n\r\nimport { Toast } from '../Toast'\r\nimport styles from './styles.module.css'\r\n\r\nexport const ToastContainer = ({ mainList }) => {\r\n  const [list, setList] = useState([])\r\n  const [toastList, setToastList] = useState([])\r\n\r\n  let toastProperties = null\r\n\r\n  const prevList = usePrevious(list)\r\n\r\n  function usePrevious(value) {\r\n    const ref = useRef()\r\n    useEffect(() => {\r\n      ref.current = value\r\n    })\r\n    return ref.current\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (mainList && mainList.length) {\r\n      for (let i = 0; i < mainList.length; i++) {\r\n        showToast(\r\n          mainList[i].type,\r\n          mainList[i].description,\r\n          mainList[i].delaytime\r\n        )\r\n      }\r\n    }\r\n  }, [mainList])\r\n\r\n  useEffect(() => {\r\n    if (prevList?.length) {\r\n      let dup = [...prevList]\r\n      let newlist = []\r\n      for (let i = 0; i < toastList.length; i++) {\r\n        const oldItem = dup.find((x) => x.id == toastList[i].id)\r\n        if (oldItem) {\r\n          newlist.push(oldItem)\r\n        } else {\r\n          newlist.push(toastList[i])\r\n        }\r\n      }\r\n      setList(newlist)\r\n    } else {\r\n      setList([...toastList])\r\n    }\r\n  }, [toastList])\r\n\r\n  useEffect(() => {\r\n    for (let i = 0; i < list?.length; i++) {\r\n      if (!list[i].isRendered) {\r\n        let dupList = [...list]\r\n        dupList[i].isRendered = true\r\n        setList(dupList)\r\n      }\r\n    }\r\n  }, [list])\r\n\r\n  const showToast = (type, text, delaytime) => {\r\n    switch (type) {\r\n      case 'success':\r\n        toastProperties = {\r\n          id: Math.floor(Math.random() * 101 + 1),\r\n          description: text,\r\n          type: styles.success,\r\n          icon: <FaCheckCircle />,\r\n          delayTime: delaytime,\r\n          date: new Date(),\r\n          isRendered: false,\r\n          isShow: false\r\n        }\r\n        break\r\n\r\n      case 'danger':\r\n        toastProperties = {\r\n          id: Math.floor(Math.random() * 101 + 1),\r\n          description: text,\r\n          type: styles.error,\r\n          icon: <FaExclamationCircle />,\r\n          delayTime: delaytime,\r\n          date: new Date(),\r\n          isRendered: false,\r\n          isShow: false\r\n        }\r\n        break\r\n\r\n      case 'warning':\r\n        toastProperties = {\r\n          id: Math.floor(Math.random() * 101 + 1),\r\n          description: text,\r\n          type: styles.warning,\r\n          icon: <FaExclamationTriangle />,\r\n          delayTime: delaytime,\r\n          date: new Date(),\r\n          isRendered: false,\r\n          isShow: false\r\n        }\r\n        break\r\n\r\n      case 'info':\r\n        toastProperties = {\r\n          id: Math.floor(Math.random() * 101 + 1),\r\n          description: text,\r\n          type: styles.info,\r\n          icon: <FaInfoCircle />,\r\n          delayTime: delaytime,\r\n          date: new Date(),\r\n          isRendered: false,\r\n          isShow: false\r\n        }\r\n        break\r\n\r\n      default:\r\n        toastProperties = {\r\n          id: Math.floor(Math.random() * 101 + 1),\r\n          description: 'This is a example toast',\r\n          type: styles.info,\r\n          icon: <FaInfoCircle />,\r\n          delayTime: 4000,\r\n          date: new Date(),\r\n          isRendered: false,\r\n          isShow: false\r\n        }\r\n        setToastList([])\r\n        break\r\n    }\r\n    setToastList([...toastList, toastProperties])\r\n  }\r\n\r\n  return (\r\n    <div className={styles.notificationContainer}>\r\n      {list\r\n        ? list?.map((item, index) => {\r\n            if (!item?.isShow) {\r\n              return <Toast item={item} key={index} />\r\n            }\r\n          })\r\n        : null}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\n\nimport Toast from 'react-toast'\nimport 'react-toast/dist/index.css'\n\nconst App = () => {\n  const [list, setList] = useState([])\n  const addToastData = () => {\n    let properties = {\n      type: 'warning',\n      description: 'Custom react toast',\n      delaytime: 3000\n    }\n    setList([...list, properties])\n  }\n\n  return (\n    <>\n      <Toast mainList={list} />\n\n      <button onClick={addToastData}>Show Toasts</button>\n    </>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}